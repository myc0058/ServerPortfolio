// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Data.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Schema.Protobuf {

  /// <summary>Holder for reflection information generated from Data.proto</summary>
  public static partial class DataReflection {

    #region Descriptor
    /// <summary>File descriptor for Data.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpEYXRhLnByb3RvEg9TY2hlbWEuUHJvdG9idWYaC0VudW1zLnByb3RvIl4K",
            "BERhdGEaVgoIUGFzc3BvcnQSCwoDSWR4GAEgASgFEg0KBU9BdXRoGAIgASgJ",
            "Eg4KBlNraW5JZBgDIAEoBRIQCghFZmZlY3RJZBgEIAEoBRIMCgRTbG90GAUg",
            "ASgFYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Schema.Protobuf.Enums.EnumsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Schema.Protobuf.Data), global::Schema.Protobuf.Data.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Schema.Protobuf.Data.Passport), global::Schema.Protobuf.Data.Passport.Parser, new[]{ "Idx", "OAuth", "SkinId", "EffectId", "Slot" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Data : pb::IMessage<Data> {
    private static readonly pb::MessageParser<Data> _parser = new pb::MessageParser<Data>(() => new Data());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schema.Protobuf.DataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Data(Data other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Data Clone() {
      return new Data(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Data other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Data message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Passport : pb::IMessage<Passport> {
        private static readonly pb::MessageParser<Passport> _parser = new pb::MessageParser<Passport>(() => new Passport());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Passport> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Schema.Protobuf.Data.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Passport() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Passport(Passport other) : this() {
          idx_ = other.idx_;
          oAuth_ = other.oAuth_;
          skinId_ = other.skinId_;
          effectId_ = other.effectId_;
          slot_ = other.slot_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Passport Clone() {
          return new Passport(this);
        }

        /// <summary>Field number for the "Idx" field.</summary>
        public const int IdxFieldNumber = 1;
        private int idx_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Idx {
          get { return idx_; }
          set {
            idx_ = value;
          }
        }

        /// <summary>Field number for the "OAuth" field.</summary>
        public const int OAuthFieldNumber = 2;
        private string oAuth_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OAuth {
          get { return oAuth_; }
          set {
            oAuth_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "SkinId" field.</summary>
        public const int SkinIdFieldNumber = 3;
        private int skinId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int SkinId {
          get { return skinId_; }
          set {
            skinId_ = value;
          }
        }

        /// <summary>Field number for the "EffectId" field.</summary>
        public const int EffectIdFieldNumber = 4;
        private int effectId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int EffectId {
          get { return effectId_; }
          set {
            effectId_ = value;
          }
        }

        /// <summary>Field number for the "Slot" field.</summary>
        public const int SlotFieldNumber = 5;
        private int slot_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Slot {
          get { return slot_; }
          set {
            slot_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Passport);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Passport other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Idx != other.Idx) return false;
          if (OAuth != other.OAuth) return false;
          if (SkinId != other.SkinId) return false;
          if (EffectId != other.EffectId) return false;
          if (Slot != other.Slot) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Idx != 0) hash ^= Idx.GetHashCode();
          if (OAuth.Length != 0) hash ^= OAuth.GetHashCode();
          if (SkinId != 0) hash ^= SkinId.GetHashCode();
          if (EffectId != 0) hash ^= EffectId.GetHashCode();
          if (Slot != 0) hash ^= Slot.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Idx != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Idx);
          }
          if (OAuth.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(OAuth);
          }
          if (SkinId != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(SkinId);
          }
          if (EffectId != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(EffectId);
          }
          if (Slot != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(Slot);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Idx != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Idx);
          }
          if (OAuth.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OAuth);
          }
          if (SkinId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkinId);
          }
          if (EffectId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectId);
          }
          if (Slot != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Slot);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Passport other) {
          if (other == null) {
            return;
          }
          if (other.Idx != 0) {
            Idx = other.Idx;
          }
          if (other.OAuth.Length != 0) {
            OAuth = other.OAuth;
          }
          if (other.SkinId != 0) {
            SkinId = other.SkinId;
          }
          if (other.EffectId != 0) {
            EffectId = other.EffectId;
          }
          if (other.Slot != 0) {
            Slot = other.Slot;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Idx = input.ReadInt32();
                break;
              }
              case 18: {
                OAuth = input.ReadString();
                break;
              }
              case 24: {
                SkinId = input.ReadInt32();
                break;
              }
              case 32: {
                EffectId = input.ReadInt32();
                break;
              }
              case 40: {
                Slot = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
