// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Synchronize.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Schema.Protobuf.Message.Synchronize {

  /// <summary>Holder for reflection information generated from Synchronize.proto</summary>
  public static partial class SynchronizeReflection {

    #region Descriptor
    /// <summary>File descriptor for Synchronize.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SynchronizeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFTeW5jaHJvbml6ZS5wcm90bxIjU2NoZW1hLlByb3RvYnVmLk1lc3NhZ2Uu",
            "U3luY2hyb25pemUaC0VudW1zLnByb3RvGgpEYXRhLnByb3RvIocCCgRDaGF0",
            "EjEKCENoYXRUeXBlGAEgASgOMh8uU2NoZW1hLlByb3RvYnVmLkVudW1zLkNo",
            "YXRUeXBlEgsKA1VJRBgCIAEoAxI8CgRGcm9tGAMgASgLMi4uU2NoZW1hLlBy",
            "b3RvYnVmLk1lc3NhZ2UuU3luY2hyb25pemUuQ2hhdC5JbmZvEjoKAlRvGAQg",
            "ASgLMi4uU2NoZW1hLlByb3RvYnVmLk1lc3NhZ2UuU3luY2hyb25pemUuQ2hh",
            "dC5JbmZvEg8KB01lc3NhZ2UYBSABKAkSEQoJVGltZXN0YW1wGAYgASgDGiEK",
            "BEluZm8SCwoDSWR4GAEgASgFEgwKBE5hbWUYAiABKAliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Schema.Protobuf.Enums.EnumsReflection.Descriptor, global::Schema.Protobuf.DataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Schema.Protobuf.Message.Synchronize.Chat), global::Schema.Protobuf.Message.Synchronize.Chat.Parser, new[]{ "ChatType", "UID", "From", "To", "Message", "Timestamp" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Schema.Protobuf.Message.Synchronize.Chat.Types.Info), global::Schema.Protobuf.Message.Synchronize.Chat.Types.Info.Parser, new[]{ "Idx", "Name" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Chat : pb::IMessage<Chat> {
    private static readonly pb::MessageParser<Chat> _parser = new pb::MessageParser<Chat>(() => new Chat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Chat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schema.Protobuf.Message.Synchronize.SynchronizeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chat(Chat other) : this() {
      chatType_ = other.chatType_;
      uID_ = other.uID_;
      From = other.from_ != null ? other.From.Clone() : null;
      To = other.to_ != null ? other.To.Clone() : null;
      message_ = other.message_;
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chat Clone() {
      return new Chat(this);
    }

    /// <summary>Field number for the "ChatType" field.</summary>
    public const int ChatTypeFieldNumber = 1;
    private global::Schema.Protobuf.Enums.ChatType chatType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schema.Protobuf.Enums.ChatType ChatType {
      get { return chatType_; }
      set {
        chatType_ = value;
      }
    }

    /// <summary>Field number for the "UID" field.</summary>
    public const int UIDFieldNumber = 2;
    private long uID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UID {
      get { return uID_; }
      set {
        uID_ = value;
      }
    }

    /// <summary>Field number for the "From" field.</summary>
    public const int FromFieldNumber = 3;
    private global::Schema.Protobuf.Message.Synchronize.Chat.Types.Info from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schema.Protobuf.Message.Synchronize.Chat.Types.Info From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "To" field.</summary>
    public const int ToFieldNumber = 4;
    private global::Schema.Protobuf.Message.Synchronize.Chat.Types.Info to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schema.Protobuf.Message.Synchronize.Chat.Types.Info To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 5;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Timestamp" field.</summary>
    public const int TimestampFieldNumber = 6;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Chat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Chat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChatType != other.ChatType) return false;
      if (UID != other.UID) return false;
      if (!object.Equals(From, other.From)) return false;
      if (!object.Equals(To, other.To)) return false;
      if (Message != other.Message) return false;
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChatType != 0) hash ^= ChatType.GetHashCode();
      if (UID != 0L) hash ^= UID.GetHashCode();
      if (from_ != null) hash ^= From.GetHashCode();
      if (to_ != null) hash ^= To.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChatType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ChatType);
      }
      if (UID != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UID);
      }
      if (from_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(From);
      }
      if (to_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(To);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChatType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChatType);
      }
      if (UID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UID);
      }
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Chat other) {
      if (other == null) {
        return;
      }
      if (other.ChatType != 0) {
        ChatType = other.ChatType;
      }
      if (other.UID != 0L) {
        UID = other.UID;
      }
      if (other.from_ != null) {
        if (from_ == null) {
          from_ = new global::Schema.Protobuf.Message.Synchronize.Chat.Types.Info();
        }
        From.MergeFrom(other.From);
      }
      if (other.to_ != null) {
        if (to_ == null) {
          to_ = new global::Schema.Protobuf.Message.Synchronize.Chat.Types.Info();
        }
        To.MergeFrom(other.To);
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            chatType_ = (global::Schema.Protobuf.Enums.ChatType) input.ReadEnum();
            break;
          }
          case 16: {
            UID = input.ReadInt64();
            break;
          }
          case 26: {
            if (from_ == null) {
              from_ = new global::Schema.Protobuf.Message.Synchronize.Chat.Types.Info();
            }
            input.ReadMessage(from_);
            break;
          }
          case 34: {
            if (to_ == null) {
              to_ = new global::Schema.Protobuf.Message.Synchronize.Chat.Types.Info();
            }
            input.ReadMessage(to_);
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
          case 48: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Chat message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Info : pb::IMessage<Info> {
        private static readonly pb::MessageParser<Info> _parser = new pb::MessageParser<Info>(() => new Info());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Info> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Schema.Protobuf.Message.Synchronize.Chat.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Info() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Info(Info other) : this() {
          idx_ = other.idx_;
          name_ = other.name_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Info Clone() {
          return new Info(this);
        }

        /// <summary>Field number for the "Idx" field.</summary>
        public const int IdxFieldNumber = 1;
        private int idx_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Idx {
          get { return idx_; }
          set {
            idx_ = value;
          }
        }

        /// <summary>Field number for the "Name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Info);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Info other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Idx != other.Idx) return false;
          if (Name != other.Name) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Idx != 0) hash ^= Idx.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Idx != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Idx);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Idx != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Idx);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Info other) {
          if (other == null) {
            return;
          }
          if (other.Idx != 0) {
            Idx = other.Idx;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Idx = input.ReadInt32();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
